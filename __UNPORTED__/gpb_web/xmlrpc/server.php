<?php
/**
 *
 * OpenERP to Virtuemart library
 * Implement some function to manage product and linked tables (category etc)
 *
 **/
// Debug mode, set 0 to not display errors
ini_set('display_errors', 1); 
include "login.php"; // parameter used for autenticazione

function log_on_file($data) {
    global $log_file;   
    
    $f = fopen($log_file, 'a') or die("Can't open log file");
    fwrite($f, "\n".$data);
    fclose($f);    
    }
    
/*function query($db, $s, $run=1) {
  global $SHOW_SQL_ERRORS, $DEBUG_SQL;

  $db->setQuery($s);
  if($run) {
    $res = $db->query();
    if ($DEBUG_SQL) {
      debug("query: ".$db->_sql);
    }
    if (!$res) {
      debug("ERROR in query: ".$db->stderr());
      if ($SHOW_SQL_ERRORS) {
        $msg = $db->stderr();
      } else {
        $msg = "Error in sql query. Read logfile for information";
      }
      throw new Exception($msg);
    }
  }
  return 1;
}*/

// give user a chance to see the source for this server instead of running the services
if ($_SERVER['REQUEST_METHOD'] != 'POST' && isset($_GET['showSource']))
{
	highlight_file(__FILE__);
	die();
}

	include("lib/xmlrpc.inc");
	include("lib/xmlrpcs.inc");
	include("lib/xmlrpc_wrappers.inc");

	/**
	* Used to test usage of object methods in dispatch maps and in wrapper code
	*/
	class xmlrpc_server_methods_container
	{
		//Method used to test logging of php warnings generated by user functions.		
		function phpwarninggenerator($m)
		{
			$a = $b; // this triggers a warning in E_ALL mode, since $b is undefined
			return new xmlrpcresp(new xmlrpcval(1, 'boolean'));
		}
	}

    // *********** CAT FILTER FUNCTION *******************************************
    // CAT FILTER: ***    
	function getcatfilter($m) 
	{
	    // Read parameter from cat filter used for filtering product:
	    global $username, $password, $database, $prefix;	
		// get the first param
		$sno = $m->getParam(0); // Name of module for cat filter
		$name = $sno->scalarval();

        $query = "SELECT * FROM ".$prefix."modules where module = 'mod_cf_filtering' and published ='1' and title = '$name'";
        mysql_connect(localhost, $username, $password);
        mysql_select_db($database) or die( "Unable to select database");

        $record = mysql_query($query);
        $tot = mysql_numrows($record);
        
        $err = "";		
        if ($tot == 0) {
			$err="Error searching catfilter, name '$name'";
    		}
		else {
            $filter_params = mysql_result($record, 0, "params"); // first record
            }
        mysql_close();
		if ($err) return new xmlrpcresp(0, $xmlrpcerruser, $err);
		else return new xmlrpcresp(new xmlrpcval($filter_params, "string"));
	}

	function setcatfilter($m) 
	{
	    global $username, $password, $database, $prefix;	
        
		// get the first param
		$sno = $m->getParam(0); // Name of module for cat filter
		$name = $sno->scalarval();
		$sno = $m->getParam(1); // Params
		$params_list = $sno->scalarval();

        $query = "SELECT * FROM ".$prefix."modules where module = 'mod_cf_filtering' and published ='1' and title = '$name'";        
        mysql_connect(localhost, $username, $password);
        mysql_select_db($database) or die( "Unable to select database");
        $record = mysql_query($query);
        $tot = mysql_numrows($record);
                
        $i=0;
		$err="";
        if ($tot == 0) {
			$err="Error searching catfilter, name '$name'";
		}
		else{
            $record_id = mysql_result($record, 0, "id");
            $response_array = mysql_result($record, 0, "params");
            $start=0;$end=0; // extra element to delete
            
            $response_explode = explode(",", $response_array);
            $count = count($response_explode);
            for ($i = 0; $i < $count; $i++) {
                if (substr($response_explode[$i], 1, 24) == "category_flt_disp_vm_cat") { // $response_explode[$i] == "\"category_flt_disp_vm_cat\":\"\"") {
                    $response_explode[$i] =  "\"category_flt_disp_vm_cat\":\"$params_list\"";
                    $start = $i +1;
                }    
                if (substr($response_explode[$i], 1, 27) == "category_flt_exclude_vm_cat") { 
                    $end = $i -1;
                }
            }                 
            // delete previuous elements:
            for ($i = $start; $i <= $end; $i++) {
                unset($response_explode[$i]);
            }
            $response_implode=implode(",", $response_explode);
		
            $query = sprintf("UPDATE %smodules SET `params`='%s' WHERE id='%s';", 
                             mysql_real_escape_string($prefix), 
                             mysql_real_escape_string($response_implode), 
                             mysql_real_escape_string($record_id)); 
            mysql_query($query);            
            }
        mysql_close();
		
		if ($err) return new xmlrpcresp(0, $xmlrpcerruser, $err);
		else return new xmlrpcresp(new xmlrpcval("OK", "string"));
	}
	

    // *********** CATEGORY FUNCTION *******************************************
    // FIND CATEGORY ID ***    
	function findcategory($m) 
	{
	    global $username, $password, $database, $prefix;	
        
		// get the first param
		$sno = $m->getParam(0); // ID of category

		// extract the value of the state number
		$name = $sno->scalarval();

        $query = "SELECT * FROM ".$prefix."virtuemart_categories_it_it where virtuemart_category_id = $name"; 
        mysql_connect(localhost, $username, $password);
        mysql_select_db($database) or die( "Unable to select database");
        $record = mysql_query($query);
        $tot = mysql_numrows($record);
        
        $i=0;
		$err="";		
        if ($tot == 0) {
			$err="Error searching category ID '$name'";
		}
		else{
		    $a=array();

            while ($i < $tot) {
                $id = mysql_result($record, $i, "virtuemart_category_id");
                $name = mysql_result($record, $i, "category_name");
                //$a[$id] = $name;
                $a[$id] = new xmlrpcval($name);
                $i++;
            }
        }
        mysql_close();
		
		if ($err) return new xmlrpcresp(0, $xmlrpcerruser, $err);
		else return new xmlrpcresp(new xmlrpcval($a, "struct"));
	}
	
    // FIND CREATE CATEGORY  ***    
	function createcategory($m) 
	{
	    global $username, $password, $database, $prefix;	
        
		// get the first param
		$sno = $m->getParam(0); // name of category (it)
		$name = $sno->scalarval();

		$sno = $m->getParam(1); // name of category (en)
		$name_en = $sno->scalarval();

		$sno = $m->getParam(2); // parent ID
		$parent_id = $sno->scalarval();

		$sno = $m->getParam(3); // Order (int)
		$sequence = $sno->scalarval();

		$sno = $m->getParam(4); // Image file name
		$image_file = $sno->scalarval();

        $err=""; # TODO manage errors
        mysql_connect(localhost, $username, $password);
        mysql_select_db($database) or die( "Unable to select database");
        
        $query = sprintf("insert into %svirtuemart_categories(virtuemart_vendor_id, published, ordering) values ('1','1', '%s');", mysql_real_escape_string($prefix), mysql_real_escape_string($sequence)); 
        mysql_query($query);
        $record_id = mysql_insert_id(); //product_id
        
        $query = sprintf("insert into %svirtuemart_categories_it_it(virtuemart_category_id,category_name,category_description,slug) values ('%s', '%s', '%s', '%s');",
            mysql_real_escape_string($prefix),
            mysql_real_escape_string($record_id),
            mysql_real_escape_string($name),
            mysql_real_escape_string($name),
            mysql_real_escape_string($name." ".$record_id));
        mysql_query($query);

        $query = sprintf("insert into %svirtuemart_categories_en_gb(virtuemart_category_id,category_name,category_description,slug) values ('%s', '%s', '%s', '%s');",
            mysql_real_escape_string($prefix),
            mysql_real_escape_string($record_id),
            mysql_real_escape_string($name_en),
            mysql_real_escape_string($name_en),
            mysql_real_escape_string($name_en." ".$record_id));
        mysql_query($query);

        if ($parent_id == 0) {
            $query = sprintf("insert into %svirtuemart_category_categories(category_parent_id,category_child_id) values ('0', '%s');",            
                mysql_real_escape_string($prefix),
                mysql_real_escape_string($record_id)); 
            mysql_query($query);
        }
        else {
            $query = sprintf("insert into %svirtuemart_category_categories(category_parent_id,category_child_id) values ('%s', '%s');",
                mysql_real_escape_string($prefix),
                mysql_real_escape_string($parent_id),
                mysql_real_escape_string($record_id)); 
            mysql_query($query);
        }
        // ASSOCIATING MEDIA IMAGE:
        // Create the media with category image openerp_id.jpg
        // test if exist:
        $query = sprintf("SELECT * FROM %svirtuemart_medias where file_title='%s' and file_type='category';",
                        mysql_real_escape_string($prefix), 
                        mysql_real_escape_string($image_file)); 
                        
        $record = mysql_query($query);
        $tot = mysql_numrows($record);
        if ($tot > 0){
           $media_id = mysql_result($record, 0, "virtuemart_media_id");
           }
        else { // create media
            /*$query = sprintf("INSERT INTO %svirtuemart_medias(
                                          virtuemart_vendor_id, file_title, file_description, file_meta, file_mimetype, file_type, file_url, file_url_thumb, published)                                           
                                          VALUES                                           
                                          ('1', '%s', '', '', 'image/jpeg', 'category', 'images/stories/virtuemart/category/%s', 'images/stories/virtuemart/category/resized/%s', '1');",                                           
                                          mysql_real_escape_string($prefix), 
                                          mysql_real_escape_string($image_file),
                                          mysql_real_escape_string($image_file),
                                          mysql_real_escape_string($image_file)); */
            $query = "INSERT INTO ".$prefix."virtuemart_medias(
                                          virtuemart_vendor_id, file_title, file_description, file_meta, file_mimetype, file_type, file_url, file_url_thumb, published)                                           
                                          VALUES                                           
                                          ('1', '$image_file', '', '', 'image/jpeg', 'category', 'images/stories/virtuemart/category/$image_file', 'images/stories/virtuemart/category/resized/$image_file', '1');"; 
            mysql_query($query);
            
            $media_id = mysql_insert_id();
        }   
        // Create association (yes erased):
        $query = sprintf("insert into %svirtuemart_category_medias(virtuemart_category_id, virtuemart_media_id) values ('%s', '%s');",            
            mysql_real_escape_string($prefix),
            mysql_real_escape_string($record_id),
            mysql_real_escape_string($media_id)); 
        mysql_query($query);
        mysql_close();
        
		if ($err)		{
			return new xmlrpcresp(0, $xmlrpcerruser, $err);		}
		else		{
		    return new xmlrpcresp(new xmlrpcval($record_id));		}
	}


    // DELETE LINK ITEM MODULE ***    
	function deletek2menuitemmodule($m)    // Only for K2
	{
	    global $username, $password, $database, $prefix;	

		// get the first param
		$sno = $m->getParam(0); // tag product default code
		$alias = $sno->scalarval();

        $err=""; # TODO manage errors
        mysql_connect(localhost, $username, $password);
        mysql_select_db($database) or die( "Unable to select database");

        $query = sprintf("SELECT * FROM %smenu WHERE alias='%s';",
            mysql_real_escape_string($prefix),
            mysql_real_escape_string($alias)); 
        $record = mysql_query($query);
        $tot = mysql_numrows($record);
        if ($tot > 0){
           $menu_id = mysql_result($record, 0, "id");
           $query = sprintf("DELETE * FROM %smodules_menu WHERE menuid='%s';",
                    mysql_real_escape_string($prefix),
                    mysql_real_escape_string($menu_id)); 
           mysql_query($query);
           }
        mysql_close();
        
		if ($err) return new xmlrpcresp(0, $xmlrpcerruser, $err); 
		else return new xmlrpcresp(new xmlrpcval("OK")); // not usefull the ID
    }


	function createk2menuitemgallery($m)    // Only for K2
	{
	    global $username, $password, $database, $prefix;	

		// get the first param
		$sno = $m->getParam(0); // tag product default code
		$alias = $sno->scalarval();
		$sno = $m->getParam(1); // tag product k2 gallery=module id
		$module_id = $sno->scalarval();

        $err=""; # TODO manage errors
        mysql_connect(localhost, $username, $password);
        mysql_select_db($database) or die( "Unable to select database");

        $query = sprintf("SELECT * FROM %smenu WHERE alias='%s';",
            mysql_real_escape_string($prefix),
            mysql_real_escape_string($alias)); 
        mysql_query($query);
        $record = mysql_query($query);
        $tot = mysql_numrows($record);
        if ($tot > 0){
           $menu_id = mysql_result($record, 0, "id");
           $query = sprintf("INSERT INTO %smodules_menu(moduleid, menuid) VALUES ('%s','%s');",
                    mysql_real_escape_string($prefix),
                    mysql_real_escape_string($module_id),                    
                    mysql_real_escape_string($menu_id)); 
           mysql_query($query);
           }
        mysql_close();
        
        
		if ($err) return new xmlrpcresp(0, $xmlrpcerruser, $err); 
		else return new xmlrpcresp(new xmlrpcval("OK")); // not usefull the ID
    }

	function createk2menuitemmodule($m)    // Only for K2
	{
	    global $username, $password, $database, $prefix;	

		// get the first param
		$sno = $m->getParam(0); // tag product default code
		$alias = $sno->scalarval();
		$sno = $m->getParam(1); // tag product k2 module id
		$module_id = $sno->scalarval();

        $err=""; # TODO manage errors
        mysql_connect(localhost, $username, $password);
        mysql_select_db($database) or die( "Unable to select database");

        $query = sprintf("SELECT * FROM %smenu WHERE alias='%s';",
            mysql_real_escape_string($prefix),
            mysql_real_escape_string($alias)); 
        mysql_query($query);
        $record = mysql_query($query);
        $tot = mysql_numrows($record);
        if ($tot > 0){
           $menu_id = mysql_result($record, 0, "id");
           $query = sprintf("INSERT INTO %smodules_menu(moduleid, menuid) VALUES ('%s','%s');",
                    mysql_real_escape_string($prefix),
                    mysql_real_escape_string($module_id),                    
                    mysql_real_escape_string($menu_id)); 
           mysql_query($query);
           }
        mysql_close();
        
        
		if ($err) return new xmlrpcresp(0, $xmlrpcerruser, $err); 
		else return new xmlrpcresp(new xmlrpcval("OK")); // not usefull the ID
    }
        

    // HOME vetrina
	function createvetrina($m)    // Only for K2
	{
	    global $username, $password, $database, $prefix;	

		// get the first param
		$sno = $m->getParam(0); // tag vetrina ID
		$vetrina_id = $sno->scalarval();

		$sno = $m->getParam(1); // Product ID
		$product_id = $sno->scalarval();

		$sno = $m->getParam(2); // Badge (hot or new)
		$badge = $sno->scalarval();
        
        $err=""; # TODO manage errors
        mysql_connect(localhost, $username, $password);
        mysql_select_db($database) or die( "Unable to select database");
        $query = sprintf("UPDATE %smodules SET params='moduleclass_sfx=_default badge-%s
getTemplate=Default
source=specific
catfilter=1
getChildren=0
items_limit=1
itemsOrdering=rand
FeaturedItems=1
popularityRange=
item=0
items=%s
itemTitle=1
itemAuthor=0
itemAuthorAvatar=0
itemIntroText=0
itemIntroTextWordLimit=
itemImage=1
itemImgSize=Medium
itemVideo=0
itemVideoCaption=0
itemVideoCredits=0
itemAttachments=0
itemTags=0
itemCategory=0
itemDateCreated=0
itemHits=0
itemReadMore=0
itemExtraFields=0
itemCommentsCounter=0
feed=0
itemPreText=
itemCustomLink=0
itemCustomLinkURL=
itemCustomLinkTitle=
cache=0
cache_time=900' WHERE id='%s';",
            mysql_real_escape_string($prefix), 
            mysql_real_escape_string($badge), 
            mysql_real_escape_string($product_id), 
            mysql_real_escape_string($vetrina_id));
        mysql_query($query);
 
 
        mysql_close();
        
		if ($err) return new xmlrpcresp(0, $xmlrpcerruser, $err); 
		else return new xmlrpcresp(new xmlrpcval("OK")); // not usefull the ID
    }
    
    // DELETE ALL CATEGORY ***    
	function createk2tag($m)    // Only for K2
	{
	    global $username, $password, $database, $prefix;	

		// get the first param
		$sno = $m->getParam(0); // tag category ID
		$category_id = $sno->scalarval();

		$sno = $m->getParam(1); // Product ID
		$product_id = $sno->scalarval();
        
        $err=""; # TODO manage errors
        mysql_connect(localhost, $username, $password);
        mysql_select_db($database) or die( "Unable to select database");

        $query = sprintf("INSERT INTO %sk2_tags_xref(tagID, itemID) values ('%s', '%s');",
            mysql_real_escape_string($prefix),
            mysql_real_escape_string($category_id),
            mysql_real_escape_string($product_id)); 
        mysql_query($query);
 
        mysql_close();
        
		if ($err) return new xmlrpcresp(0, $xmlrpcerruser, $err); 
		else return new xmlrpcresp(new xmlrpcval("OK")); // not usefull the ID
    }
        
	function unlinkallcategory($m) 
	{
	    global $username, $password, $database, $prefix;	

		// get the first param
		$sno = $m->getParam(0); // Is K2?
		$is_k2 = $sno->scalarval();
        
        $err=""; # TODO manage errors
        mysql_connect(localhost, $username, $password);
        mysql_select_db($database) or die( "Unable to select database");
        
        if ($is_k2){
            // delete original category
            $query = sprintf("delete from %sk2_tags_xref;", mysql_real_escape_string($prefix)); 
            mysql_query($query);
        }
        else {
            // delete original category
            $query = sprintf("delete from %svirtuemart_categories;", mysql_real_escape_string($prefix)); 
            mysql_query($query);
            
            // delete italian description
            $query = sprintf("delete from %svirtuemart_categories_it_it;", mysql_real_escape_string($prefix)); 
            mysql_query($query);

            // delete english description
            $query = sprintf("delete from %svirtuemart_categories_en_gb;", mysql_real_escape_string($prefix)); 
            mysql_query($query);

            // delete parent link
            $query = sprintf("delete from %svirtuemart_category_categories;", mysql_real_escape_string($prefix)); 
            mysql_query($query);

            // delete media for category image (and line image)
            $query = sprintf("DELETE FROM %svirtuemart_medias WHERE file_type='category';", mysql_real_escape_string($prefix)); 
            mysql_query($query);

            // delete association of category to media image
            $query = sprintf("DELETE FROM %svirtuemart_category_medias;", mysql_real_escape_string($prefix)); 
            mysql_query($query);
        }        

        mysql_close();
        
		if ($err) return new xmlrpcresp(0, $xmlrpcerruser, $err); 
		else return new xmlrpcresp(new xmlrpcval("OK"));
	}

    // *********** MANUFACTURER FUNCTION *******************************************
    // FIND MANUFACTURER ID ***   TODO eliminare 
	function findmanufacturer($m) 
	{
	    global $username, $password, $database, $prefix;	
        
		// get the first param
		$sno = $m->getParam(0); // ID of manufacturer

		// extract the value of the state number
		$name = $sno->scalarval();

        mysql_connect(localhost, $username, $password);
        mysql_select_db($database) or die( "Unable to select database");

        $query = "SELECT * FROM ".$prefix."virtuemart_manufacturers_it_it where virtuemart_manufacturers_id = $name"; 
        $record = mysql_query($query);
        $tot = mysql_numrows($record);
        
        $i=0;
		$err="";		
        if ($tot == 0) {
			$err="Error searching manufacturers ID '$name'";
		}
		else{
		    $a=array();

            while ($i < $tot) {
                $id = mysql_result($record, $i, "virtuemart_manufacturers_id");
                $name = mysql_result($record, $i, "mf_name");
                $a[$id] = new xmlrpcval($name);
                $i++;
            }
        }
        mysql_close();

		if ($err) return new xmlrpcresp(0, $xmlrpcerruser, $err); 
		else return new xmlrpcresp(new xmlrpcval($a,	"struct"));
	}
	
    // FIND CREATE MANUFACTURER  ***    
	function createmanufacturer($m) 
	{
	    global $username, $password, $database, $prefix;	
        
		// get the first param
		$sno = $m->getParam(0); // name of manufacturer (it)
		$name = $sno->scalarval();

		$sno = $m->getParam(1); // name of manufacturer (en)
		$name_en = $sno->scalarval();

		$err=""; # TODO manage errors
        mysql_connect(localhost, $username, $password);
        mysql_select_db($database) or die( "Unable to select database");

        $query = sprintf("insert into %svirtuemart_manufacturers(published) values ('1');", mysql_real_escape_string($prefix)); 
        mysql_query($query);
        $record_id = mysql_insert_id();
        
        $query = sprintf("insert into %svirtuemart_manufacturers_it_it(virtuemart_manufacturer_id, mf_name, mf_desc, slug) values ('%s', '%s', '%s', '%s');",
            mysql_real_escape_string($prefix),
            mysql_real_escape_string($record_id),
            mysql_real_escape_string($name),
            mysql_real_escape_string($name),
            mysql_real_escape_string($record_id));
        mysql_query($query);

        $query = sprintf("insert into %svirtuemart_manufacturers_en_gb(virtuemart_manufacturer_id, mf_name, mf_desc, slug) values ('%s', '%s', '%s', '%s');",
            mysql_real_escape_string($prefix),
            mysql_real_escape_string($record_id),
            mysql_real_escape_string($name_en),
            mysql_real_escape_string($name_en),
            mysql_real_escape_string($record_id));
        mysql_query($query);
        
        mysql_close();
        
		if ($err)		{
			return new xmlrpcresp(0, $xmlrpcerruser, $err);
		}
		else		{
		    return new xmlrpcresp(new xmlrpcval($record_id));
		}
	}

    // DELETE ALL MANUFACTURER ***    
	function unlinkallmanufacturer($m) 
	{
	    global $username, $password, $database, $prefix;	
        
        $err=""; # TODO manage errors
        mysql_connect(localhost, $username, $password);
        mysql_select_db($database) or die( "Unable to select database");
        
        $query = sprintf("delete from %svirtuemart_manufacturers;", mysql_real_escape_string($prefix)); 
        mysql_query($query);
        
        $query = sprintf("delete from %svirtuemart_manufacturers_it_it;", mysql_real_escape_string($prefix)); 
        mysql_query($query);

        $query = sprintf("delete from %svirtuemart_manufacturers_en_gb;", mysql_real_escape_string($prefix)); 
        mysql_query($query);

        mysql_close();
        
		if ($err)		{
			return new xmlrpcresp(0, $xmlrpcerruser, $err);
		}
		else		{
		    return new xmlrpcresp(new xmlrpcval("OK"));
		}
	}

    // *********** MEDIA  ******************************************************
    // CREATE MEDIA FOR PRODUCT ***    
	function createmedia($m) 	{
	    // Create a media for product
	    global $username, $password, $database, $prefix;	
        
		$sno = $m->getParam(0); // file name 
		$name = $sno->scalarval();

		$err=""; # TODO manage errors
        mysql_connect(localhost, $username, $password);
        mysql_select_db($database) or die( "Unable to select database");

        // test if exist:
        $query = sprintf("SELECT * FROM %svirtuemart_medias where file_title='%s';",
                        mysql_real_escape_string($prefix), 
                        mysql_real_escape_string($name)); 
        $record = mysql_query($query);        
        if (mysql_numrows($record) > 0){
           $record_id = mysql_result($record, 0, "virtuemart_media_id");
           }
        else {                
            $query = sprintf("INSERT INTO %svirtuemart_medias
                                          (virtuemart_vendor_id, file_title, file_description, file_meta, file_mimetype, file_type, file_url, file_url_thumb, published)                                           
                                          VALUES                                           
                                          ('1', '%s', '', '', 'image/jpeg', 'product', 'images/stories/virtuemart/product/%s', 'images/stories/virtuemart/product/resized/%s', '1');",                                           
                                          mysql_real_escape_string($prefix), 
                                          mysql_real_escape_string($name),
                                          mysql_real_escape_string($name),
                                          mysql_real_escape_string($name)); 
            mysql_query($query);
            $record_id = mysql_insert_id();
        }
        mysql_close();
                
		if ($err) return new xmlrpcresp(0, $xmlrpcerruser, $err);
		else return new xmlrpcresp(new xmlrpcval($record_id));
	}

    // CREATE PRODUCT MEDIA  ***    
	function createproductmedia($m) {
	    // link a media_id to a product_id
	    global $username, $password, $database, $prefix;	
        
		$sno = $m->getParam(0); // product_id
		$product_id = $sno->scalarval();
		$sno = $m->getParam(1); // media_id
		$media_id = $sno->scalarval();
		$sno = $m->getParam(2); // ordering
		$sequence = $sno->scalarval();

		$err=""; # TODO manage errors
        mysql_connect(localhost, $username, $password);
        mysql_select_db($database) or die( "Unable to select database");                                                       
        $query = "INSERT INTO ".$prefix."virtuemart_product_medias(virtuemart_product_id, virtuemart_media_id, ordering) VALUES ('$product_id', '$media_id', '$sequence');";

        /*$query = sprintf("INSERT INTO %s_virtuemart_product_medias(`virtuemart_product_id`,`virtuemart_media_id`,`ordering`) VALUES ('%s', '%s', '1');",
                                          mysql_real_escape_string($prefix), 
                                          mysql_real_escape_string($product_id),
                                          mysql_real_escape_string($media_id)); TODO vedere perchè non funziona! */
        mysql_query($query);
        $record_id = mysql_insert_id();
        mysql_close();
                
		if ($err) return new xmlrpcresp(0, $xmlrpcerruser, $err);
		else return new xmlrpcresp(new xmlrpcval($record_id));
	}

    // DELETE PRODUCT MEDIA  ***    
	function unlinkproductmedia($m) 	{
	    // delete media for product
	    global $username, $password, $database, $prefix;	
        
		$sno = $m->getParam(0); // product_id
		$product_id = $sno->scalarval();

		$err=""; # TODO manage errors
        mysql_connect(localhost, $username, $password);
        mysql_select_db($database) or die( "Unable to select database");

        $query = "DELETE FROM ".$prefix."virtuemart_product_medias WHERE virtuemart_product_id = '$product_id';";
        mysql_query($query);
        mysql_close();
                
		if ($err){
			return new xmlrpcresp(0, $xmlrpcerruser, $err);}
		else {
		    return new xmlrpcresp(new xmlrpcval("OK"));}
	}


    // *********** CUSTOM FILTER *******************************************    
    // K2 create module custom left for product:
	function createproductgallery($m) 	{ // only for K2
	    global $username, $password, $database, $prefix;	
        
		// get the first param
		$sno = $m->getParam(0); // folder name
		$folder = $sno->scalarval();
		$sno = $m->getParam(1); // title
		$title = $sno->scalarval();

		$err=""; # TODO manage errors
        mysql_connect(localhost, $username, $password);
        mysql_select_db($database) or die( "Unable to select database");

        $query = sprintf("SELECT * FROM %smodules where module='mod_yoo_gallery' and params like 'src=/images/stories/GALLERY/%s/%s';", 
                                        mysql_real_escape_string($prefix), 
                                        mysql_real_escape_string($folder),
                                        mysql_real_escape_string("%")); 
        $record = mysql_query($query);
        $tot = mysql_numrows($record);
        if ($tot > 0){
            $record_id = mysql_result($record, 0, "id");
            $query = sprintf("UPDATE %smodules SET `title`='%s',`position`='right',`published`='1',`module`='mod_yoo_gallery',`showtitle`='0',`params`='src=/images/stories/GALLERY/%s/
                                                         style=lightbox\neffect=fade\nthumb=default\norder=asc\nspotlight=0\nwidth=170\nheight=0\nresize=1\ncount=0
                                                         title=\nprefix=thumb_\nthumb_cache_dir=thumbs\nthumb_cache_time=1440\nload_lightbox=1\nrel=
                                                         moduleclass_sfx=-blank\ncache=0\ncache_time=900' WHERE id='%s;", 
                             mysql_real_escape_string($prefix), 
                             mysql_real_escape_string($title), 
                             mysql_real_escape_string($folder), 
                             mysql_real_escape_string($record_id)); 
            mysql_query($query);
           }
        else {                
            $query = sprintf("INSERT INTO %smodules(`title`, `position`,`published`,`module`,`showtitle`,`params`) VALUES ('%s', 'right', '1' ,'mod_yoo_gallery', '0', 'src=/images/stories/GALLERY/%s/
                                                         style=lightbox\neffect=fade\nthumb=default\norder=asc\nspotlight=0\nwidth=170\nheight=0\nresize=1\ncount=0
                                                         title=\nprefix=thumb_\nthumb_cache_dir=thumbs\nthumb_cache_time=1440\nload_lightbox=1\nrel=
                                                         moduleclass_sfx=-blank\ncache=0\ncache_time=900');", 
                             mysql_real_escape_string($prefix), 
                             mysql_real_escape_string($title), 
                             mysql_real_escape_string($folder));

            mysql_query($query);
            $record_id = mysql_insert_id();
        }
        mysql_close();
                
		if ($err){
			return new xmlrpcresp(0, $xmlrpcerruser, $err);}
		else {
		    return new xmlrpcresp(new xmlrpcval($record_id, 'int'));}
	}
    

    // K2 create module custom left for product:
	function createproductmodcustom($m) 	{ // only for K2
	    global $username, $password, $database, $prefix;	
        
		// get the first param
		$sno = $m->getParam(0);  // item ID
		$item_id = $sno->scalarval();
		$sno = $m->getParam(1); // title
		$title = $sno->scalarval();
		$sno = $m->getParam(2); // text
		$text = $sno->scalarval();
		$sno = $m->getParam(3); // has title (0 or 1)
		$has_title = $sno->scalarval();

		$err=""; # TODO manage errors
        mysql_connect(localhost, $username, $password);
        mysql_select_db($database) or die( "Unable to select database");

        $query = sprintf("SELECT * FROM %smodules where id='%s';", 
                                        mysql_real_escape_string($prefix), 
                                        mysql_real_escape_string($item_id)); 
        $record = mysql_query($query);
        $tot = mysql_numrows($record);
        if ($tot > 0){
            $record_id = mysql_result($record, 0, "id");
            $query = sprintf("UPDATE `%smodules` SET `title`='%s',`content`='%s',`position`='left',`published`='1',`module`='mod_custom',`showtitle`='%s',`params`='moduleclass_sfx=\n' WHERE id='%s';", 
                             mysql_real_escape_string($prefix), 
                             mysql_real_escape_string($title), 
                             mysql_real_escape_string($text), 
                             mysql_real_escape_string($has_title), 
                             mysql_real_escape_string($record_id)); 
            mysql_query($query);
           }
        else {                
            $query = sprintf("INSERT INTO %smodules (`title`, `content`, `position`, `published`, `module`, `showtitle`, `params`) VALUES ('%s', '%s', 'left', '1', 'mod_custom', '%s', 'moduleclass_sfx=\n');", 
                             mysql_real_escape_string($prefix), 
                             mysql_real_escape_string($title), 
                             mysql_real_escape_string($has_title), 
                             mysql_real_escape_string($text)); 
            mysql_query($query);
            $record_id = mysql_insert_id();
        }
        mysql_close();
                
		if ($err){
			return new xmlrpcresp(0, $xmlrpcerruser, $err);}
		else {
		    return new xmlrpcresp(new xmlrpcval($record_id, 'int'));}
	}
    
    // CREATE CUSTOM FIELD (anagrafic list of usable filters) ***    
	function createcustoms($m) 	{
	    global $username, $password, $database, $prefix;	
        
		// get the first param
		$sno = $m->getParam(0); // name of custom filter (it)
		$name = $sno->scalarval();
		
		$sno = $m->getParam(1); // order sequence
		$sequence = $sno->scalarval();

		$sno = $m->getParam(2); // field type
		$field_type = $sno->scalarval();

		$err=""; # TODO manage errors
        mysql_connect(localhost, $username, $password);
        mysql_select_db($database) or die( "Unable to select database");

        // Custom filters:
        // test if exist:        
        $query = sprintf("SELECT * FROM %svirtuemart_customs where custom_title='%s';", mysql_real_escape_string($prefix), mysql_real_escape_string($name)); 
        $record = mysql_query($query);        
        $tot = mysql_numrows($record);
        if ($tot > 0){
           $record_id = mysql_result($record, 0, "virtuemart_custom_id");
           }
        else {                
            $query = sprintf("INSERT INTO %svirtuemart_customs(custom_title, field_type) values ('%s', 'S');", 
                             mysql_real_escape_string($prefix), 
                             mysql_real_escape_string($name)); 
            mysql_query($query);
            $record_id = mysql_insert_id();
        }

        // Cat filter module: custom filters
        // test if exist:         
        //alias, vm_custom_id, ordering, published, type_id, order_by, order_dir 
        $query = sprintf("SELECT * FROM %scf_customfields where vm_custom_id='%s';", mysql_real_escape_string($prefix), mysql_real_escape_string($record_id)); 
        $record = mysql_query($query);        
        $tot = mysql_numrows($record);
        if ($tot > 0){ // UPDATE:
            $query = sprintf("UPDATE %scf_customfields SET alias='%s', published='1', ordering='%s', type_id='%s' WHERE vm_custom_id='%s';",
                            mysql_real_escape_string($prefix), 
                            mysql_real_escape_string($name), 
                            mysql_real_escape_string($sequence), 
                            mysql_real_escape_string($field_type), 
                            mysql_real_escape_string($record_id));
            $record = mysql_query($query);                
           }
        else {  // CREATE               
            $query = sprintf("INSERT INTO %scf_customfields(alias, published, ordering, field_id) VALUES ('%s', '1', '%s', '%s');", 
                             mysql_real_escape_string($prefix), 
                             mysql_real_escape_string($name),
                            mysql_real_escape_string($sequence),
                            mysql_real_escape_string($field_type)); 
            mysql_query($query);
            $record_id = mysql_insert_id();
        }

        mysql_close();
                
		if ($err){
			return new xmlrpcresp(0, $xmlrpcerruser, $err);}
		else {
		    return new xmlrpcresp(new xmlrpcval($record_id));}
	}

	function unlinkcustomfilter($m)	{
	    // delete filter for product_id passed:
	    global $username, $password, $database, $prefix;	
        
		// get the first param
		$sno = $m->getParam(0); // product_id
		$product_id = $sno->scalarval();

		$err=""; # TODO manage errors
        mysql_connect(localhost, $username, $password);
        mysql_select_db($database) or die( "Unable to select database");

        $query = sprintf("DELETE FROM %svirtuemart_product_customfields where virtuemart_product_id='%s';",
                        mysql_real_escape_string($prefix), 
                        mysql_real_escape_string($product_id)); 
        $record = mysql_query($query);        

		if ($err) {
			return new xmlrpcresp(0, $xmlrpcerruser, $err);	}
		else {
		    return new xmlrpcresp(new xmlrpcval("OK"));	}
	}	

	function createcustomfilter($m) {
	    global $username, $password, $database, $prefix;	
        
		// get the first param
		$sno = $m->getParam(0); // name
		$name = $sno->scalarval();

		$sno = $m->getParam(1); // product_id
		$product_id = $sno->scalarval();

		$sno = $m->getParam(2); // custom_field_id
		$field_id = $sno->scalarval();

		$err=""; # TODO manage errors
        mysql_connect(localhost, $username, $password);
        mysql_select_db($database) or die( "Unable to select database");

        $query = sprintf("INSERT INTO %svirtuemart_product_customfields(custom_value, virtuemart_product_id, virtuemart_custom_id) VALUES ('%s', '%s', '%s');", 
                         mysql_real_escape_string($prefix), 
                         mysql_real_escape_string($name),
                         mysql_real_escape_string($product_id),
                         mysql_real_escape_string($field_id)); 
        mysql_query($query);
        $record_id = mysql_insert_id();        
        mysql_close();
                
		if ($err){
			return new xmlrpcresp(0, $xmlrpcerruser, $err);		}
		else {
		    return new xmlrpcresp(new xmlrpcval($record_id));		}
	}

	function createcustomrelatedfilter($m) {
	    global $username, $password, $database, $prefix;	
        
		// get the first param
		$sno = $m->getParam(0); // parent product_id
		$parent_id = $sno->scalarval();

		$sno = $m->getParam(1); // child product_id
		$child_id = $sno->scalarval();

		$sno = $m->getParam(2); // ordering
		$sequence = $sno->scalarval();

		$err=""; # TODO manage errors
        mysql_connect(localhost, $username, $password);
        mysql_select_db($database) or die( "Unable to select database");

        // find custom filter for related (default element)
        $query = sprintf("SELECT * FROM %svirtuemart_customs WHERE custom_title='COM_VIRTUEMART_RELATED_PRODUCTS';", 
                         mysql_real_escape_string($prefix)); 
        $record = mysql_query($query);    
        if (mysql_numrows($record) > 0){
           $custom_id = mysql_result($record, 0, "virtuemart_custom_id");
        }
        else {
            $custom_id=0;
        }

        if ($custom_id > 0) {
            $query = sprintf("INSERT INTO %svirtuemart_product_customfields(virtuemart_product_id, virtuemart_custom_id, custom_value, ordering) VALUES ('%s', '%s', '%s', '%s');", 
                             mysql_real_escape_string($prefix), 
                             mysql_real_escape_string($parent_id),
                             mysql_real_escape_string($custom_id),
                             mysql_real_escape_string($child_id),
                             mysql_real_escape_string($sequence)); 
            mysql_query($query);
            $record_id = mysql_insert_id();        
        }    
        else {
            $err="Error no custom field find for linked product";
        }        
        mysql_close();
    
		if ($err) return new xmlrpcresp(0, $xmlrpcerruser, $err);
		else return new xmlrpcresp(new xmlrpcval($record_id));
	}

    // *********** PRODUCT *****************************************************    
    function unlinkallproducts($m) {
	    global $username, $password, $database, $prefix;	
	    
		$sno = $m->getParam(0); // parent shop_id
		$is_k2 = $sno->scalarval();

		$product_ids=$m->getParam(1); // no scalarval (after using arraymem)
		
		$err="";
        // find array int list (for removing procedure):
        $ids=array();
        
		if (isset($product_ids) && $product_ids->kindOf()=="array"){
			for($i = 0; $i < $product_ids->arraysize(); $i++){
				$rec = $product_ids->arraymem($i);
				//if ($rec->kindOf()!="int") $err="Not found int element $i"; break;
                $ids[] = $rec->scalarval();
            }
        }

        mysql_connect(localhost, $username, $password);
        mysql_select_db($database) or die( "Unable to select database");

        $ids_list = join(",",$ids);

        if (is_k2){
            // Delete product items:
            $query = sprintf("DELETE FROM %sk2_items WHERE id in (%s);", mysql_real_escape_string($prefix), mysql_real_escape_string($ids_list)); 
            mysql_query($query);    
            // Delete product tags:    
            $query = sprintf("DELETE FROM %sk2_tags_xref WHERE itemID in (%s);", mysql_real_escape_string($prefix), mysql_real_escape_string($ids_list)); 
            mysql_query($query);        
        }        
        else {
            // DELETE virtuemart_products:
            $query = sprintf("DELETE FROM %svirtuemart_products WHERE virtuemart_product_id in (%s);", mysql_real_escape_string($prefix), mysql_real_escape_string($ids_list)); 
            mysql_query($query);        
            $query = sprintf("DELETE FROM %svirtuemart_products_it_it WHERE virtuemart_product_id in (%s);", mysql_real_escape_string($prefix), mysql_real_escape_string($ids_list)); 
            mysql_query($query);        
            $query = sprintf("DELETE FROM %svirtuemart_products_en_gb WHERE virtuemart_product_id in (%s);", mysql_real_escape_string($prefix), mysql_real_escape_string($ids_list)); 
            mysql_query($query);        
            $query = sprintf("DELETE FROM %svirtuemart_product_categories WHERE virtuemart_product_id in (%s);", mysql_real_escape_string($prefix), mysql_real_escape_string($ids_list)); 
            mysql_query($query);        
            $query = sprintf("DELETE FROM %svirtuemart_product_customfields WHERE virtuemart_product_id in (%s);", mysql_real_escape_string($prefix), mysql_real_escape_string($ids_list)); 
            mysql_query($query);        
            $query = sprintf("DELETE FROM %svirtuemart_product_manufacturers WHERE virtuemart_product_id in (%s);", mysql_real_escape_string($prefix), mysql_real_escape_string($ids_list)); 
            mysql_query($query);        
            $query = sprintf("DELETE FROM %svirtuemart_product_medias WHERE virtuemart_product_id in (%s);", mysql_real_escape_string($prefix), mysql_real_escape_string($ids_list)); 
            mysql_query($query);        
            $query = sprintf("DELETE FROM %svirtuemart_product_prices WHERE virtuemart_product_id in (%s);", mysql_real_escape_string($prefix), mysql_real_escape_string($ids_list)); 
            mysql_query($query);        
            $query = sprintf("DELETE FROM %svirtuemart_product_relations WHERE virtuemart_product_id in (%s);", mysql_real_escape_string($prefix), mysql_real_escape_string($ids_list)); 
            mysql_query($query);        
        }
                
        mysql_close();
		
		if ($err) return new xmlrpcresp(0, $xmlrpcerruser, $err);
		else return new xmlrpcresp(new xmlrpcval("OK"));
    }

    function getsecurehrMD5($m) { // High resolution image name in MD5:
	    global $username, $password, $database, $prefix;	

		$sno = $m->getParam(0); // parent alias
		$product_alias = $sno->scalarval();

		$err=""; # TODO manage errors
        $code = md5("SecureHR".$product_alias);            //item_id
         
		if ($err) return new xmlrpcresp(0, $xmlrpcerruser, $err);
		else return new xmlrpcresp(new xmlrpcval($code));
    }


    function getimageMD5($m) { // K2 get MD5:
	    global $username, $password, $database, $prefix;	

		$sno = $m->getParam(0); // parent alias
		$product_alias = $sno->scalarval();

		$err=""; # TODO manage errors
        mysql_connect(localhost, $username, $password);
        mysql_select_db($database) or die( "Unable to select database");

        // test if exist:
        $query = sprintf("SELECT * FROM %sk2_items WHERE alias='$product_alias';", mysql_real_escape_string($prefix)); 
        $record = mysql_query($query);    
        if (mysql_numrows($record) > 0){
            $item_id = mysql_result($record, 0, "id");
            $code = md5("Image".$item_id);            
        }
        else {
            $code = "";
        }
         
		if ($err) return new xmlrpcresp(0, $xmlrpcerruser, $err);
		else return new xmlrpcresp(new xmlrpcval($code));
    }

    function unlinktrashpublish($m) { // K2 function:
	    global $username, $password, $database, $prefix;	

		$err=""; # TODO manage errors
        mysql_connect(localhost, $username, $password);
        mysql_select_db($database) or die( "Unable to select database");

        // test if exist:
        $query = sprintf("DELETE FROM `%sk2_items` WHERE published='0' or trash='1';", mysql_real_escape_string($prefix)); 
        mysql_query($query);       
         
		if ($err) return new xmlrpcresp(0, $xmlrpcerruser, $err);
		else return new xmlrpcresp(new xmlrpcval("OK"));
    }
    
    function updateproductalias($m) { // K2 function:
	    global $username, $password, $database, $prefix;	
		$sno = $m->getParam(0); // parent alias
		$old_k2_alias = $sno->scalarval();

		$sno = $m->getParam(1); // parent default_code
		$new_k2_alias = $sno->scalarval();

		$err=""; # TODO manage errors
        mysql_connect(localhost, $username, $password);
        mysql_select_db($database) or die( "Unable to select database");

        // test if exist:
        $query = sprintf("UPDATE %sk2_items SET alias='$new_k2_alias' WHERE alias='$old_k2_alias';", mysql_real_escape_string($prefix)); 
        mysql_query($query);       
         
		
		if ($err) return new xmlrpcresp(0, $xmlrpcerruser, $err);
		else return new xmlrpcresp(new xmlrpcval("OK"));
    }
    
    
    function getallproducts($m) { // K2 e VM 
	    global $username, $password, $database, $prefix;	
	    
		$sno = $m->getParam(0); // parent shop_id
		$is_k2 = $sno->scalarval();

		$err=""; # TODO manage errors
        mysql_connect(localhost, $username, $password);
        mysql_select_db($database) or die( "Unable to select database");

        // test if exist:
        if (is_k2){
            $query = sprintf("select * from %sk2_items;", mysql_real_escape_string($prefix)); 
            }
        else {
            $query = sprintf("select * from %svirtuemart_products;", mysql_real_escape_string($prefix)); 
        }
        $record = mysql_query($query);        
        $product_ids=array();
        $i=0;
        while ($i < mysql_numrows($record)) {            
            if (is_k2){
               $id = mysql_result($record, $i, "id");
               $sku = mysql_result($record, $i, "alias");
               }
            else {
               $id = mysql_result($record, $i, "virtuemart_product_id");
               $sku = mysql_result($record, $i, "product_sku");
            }   
            $product_ids[$sku] = new xmlrpcval($id);
            $i++;
        }
        mysql_close();
		
		if ($err) return new xmlrpcresp(0, $xmlrpcerruser, $err);
		else return new xmlrpcresp(new xmlrpcval($product_ids, "struct"));
    }
    
    function createproductslanguage($m) {
	    global $username, $password, $database, $prefix;	
        
		// get the first param
		$sno = $m->getParam(0); // lang code (part of table)
		$lang_code = $sno->scalarval();

		$sno = $m->getParam(1); // product_id
		$product_id = $sno->scalarval();

		$sno = $m->getParam(2); // name
		$name = $sno->scalarval();

		$sno = $m->getParam(3); // short
		$short = $sno->scalarval();

		$sno = $m->getParam(4); // description
		$description = $sno->scalarval();

		//$sno = $m->getParam(5); // lasrge description
		//$large_description = $sno->scalarval();

		$err=""; # TODO manage errors
        mysql_connect(localhost, $username, $password);
        mysql_select_db($database) or die( "Unable to select database");

        $query = sprintf("SELECT * FROM %svirtuemart_products_%s WHERE virtuemart_product_id='%s';", mysql_real_escape_string($prefix), mysql_real_escape_string($lang_code), mysql_real_escape_string($product_id)); 
        $record = mysql_query($query);        
        if (mysql_numrows($record)){
           // UPDATE LANGUAGE
           $query = sprintf("UPDATE %svirtuemart_products_%s SET product_name='%s', product_s_desc='%s', product_desc='%s', slug='%s' WHERE virtuemart_product_id=%s;",
                mysql_real_escape_string($prefix),
                mysql_real_escape_string($lang_code),
                mysql_real_escape_string($name),
                mysql_real_escape_string($short),        // short desc
                mysql_real_escape_string($description),  // long desc
                mysql_real_escape_string($product_id),
                mysql_real_escape_string($product_id));
           mysql_query($query);
           }
        else {  // CREATE LANGUAGE:
           $query = sprintf("INSERT INTO %svirtuemart_products_%s (virtuemart_product_id, product_name, product_s_desc, product_desc, slug) VALUES ('%s', '%s', '%s', '%s', '%s');",
                mysql_real_escape_string($prefix),
                mysql_real_escape_string($lang_code),
                mysql_real_escape_string($product_id),
                mysql_real_escape_string($name),
                mysql_real_escape_string($short),
                mysql_real_escape_string($description),
                mysql_real_escape_string($product_id));
            mysql_query($query);
        }
        mysql_close();
        
		if ($err) return new xmlrpcresp(0, $xmlrpcerruser, $err);
		else return new xmlrpcresp(new xmlrpcval("OK"));
	}

	function createk2products($m) {   // K2 only
	    global $username, $password, $database, $prefix;	
        
		// get the first param
		$sno = $m->getParam(0);    // product code
		$code = $sno->scalarval();
		$sno = $m->getParam(1);    // name
		$name = $sno->scalarval();
		$sno = $m->getParam(2);    // params
		$params = $sno->scalarval();
		$sno = $m->getParam(3);    // gallery
		$gallery = $sno->scalarval();
		$sno = $m->getParam(4);    // extra
		$extra = $sno->scalarval();
		$sno = $m->getParam(5);    // search
		$search = $sno->scalarval();
		$sno = $m->getParam(6);    // caption
		$caption = $sno->scalarval();
		$sno = $m->getParam(7);    // intro
		$intro = $sno->scalarval();
		$sno = $m->getParam(8);    // full
		$full = $sno->scalarval();
		$sno = $m->getParam(9);    // order
		$order = $sno->scalarval();
		$sno = $m->getParam(10);    // catid
		$catid = $sno->scalarval();

        // TODO parametrize UOM:		
		//$product_weight_uom = "KG";
		//$product_lwh_uom = "CM";
		
		$err=""; # TODO manage errors
        mysql_connect(localhost, $username, $password);
        mysql_select_db($database) or die( "Unable to select database");

        // CREATE ROOT PRODUCT RECORD:
        $query = sprintf("SELECT * FROM  %sk2_items WHERE alias='%s';", mysql_real_escape_string($prefix), mysql_real_escape_string($code));         
        $record = mysql_query($query); 
        if (mysql_numrows($record)){ # Update record:
            $record_id = mysql_result($record, 0, "id");
            $query = sprintf("UPDATE %sk2_items SET `title` = '%s', `catid` = '%s', `published` = '1', `introtext` = '%s', `fulltext` = '%s', `gallery` = '%s', `extra_fields` = '%s', `extra_fields_search` = '%s', `ordering` = '%s', `image_caption` = '%s', `params` = '%s' WHERE `id` = '%s';",		
	                mysql_real_escape_string($prefix),
		            mysql_real_escape_string($name),
		            mysql_real_escape_string($catid),
		            mysql_real_escape_string($intro),
		            mysql_real_escape_string($full),
		            mysql_real_escape_string($gallery),
		            mysql_real_escape_string($extra),
		            mysql_real_escape_string($search),
		            mysql_real_escape_string($order),
		            mysql_real_escape_string($caption),
		            mysql_real_escape_string($params),
		            mysql_real_escape_string($record_id));
            mysql_query($query);
           }
        else {  # Create new record
            $query = sprintf("INSERT INTO %sk2_items(`alias`, `title`, `catid`, `published`, `introtext`, `fulltext`, `gallery`, `extra_fields`, `extra_fields_search`, `ordering`, `image_caption`, `params`) VALUES ('%s', '%s', '1', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s');",
	                mysql_real_escape_string($prefix),
	                mysql_real_escape_string($code),
		            mysql_real_escape_string($name),
		            mysql_real_escape_string($catid),
		            mysql_real_escape_string($intro),
		            mysql_real_escape_string($full),
		            mysql_real_escape_string($gallery),
		            mysql_real_escape_string($extra),
		            mysql_real_escape_string($search),
		            mysql_real_escape_string($order),
		            mysql_real_escape_string($caption),
		            mysql_real_escape_string($params));
            mysql_query($query);
            $record_id = mysql_insert_id();
        }
                
        // MENU ITEMS: every product has a menu for associate product
        $query = sprintf("SELECT * FROM  %smenu WHERE alias='%s';", mysql_real_escape_string($prefix), mysql_real_escape_string($code));         
        $record = mysql_query($query); 
        if (mysql_numrows($record)){ # Update record:
            $query = sprintf("UPDATE `%smenu` SET `menutype`='single_product', `name`='%s', `link`='index.php?option=com_k2&view=item&layout=item&id=%s', `type`='component', 
                                                  `published`='1', `parent`='0', `componentid`='34', `sublevel`='0', `params`='page_title=\nshow_page_title=1\npageclass_sfx=\nmenu_image=-1\nsecure=0' 
                                              WHERE `alias`='%s';",
	                mysql_real_escape_string($prefix),
		            mysql_real_escape_string($name),
		            mysql_real_escape_string($record_id),
  	                mysql_real_escape_string($code));
            mysql_query($query);
           }
        else {  # Create new record
            $query = sprintf("INSERT INTO `%smenu`(`menutype`, `name`, `alias`, `link`, `type`, `published`, `parent`, `componentid`, `sublevel`, `params`) VALUES 
                 ('single_product','%s','%s','index.php?option=com_k2&view=item&layout=item&id=%s', 'component', '1', '0', '34', '0', 'page_title=\nshow_page_title=1\npageclass_sfx=\nmenu_image=-1\nsecure=0');",
	                mysql_real_escape_string($prefix),
		            mysql_real_escape_string($name),
	                mysql_real_escape_string($code),
		            mysql_real_escape_string($record_id));
            mysql_query($query);
        }
                
		if ($err) return new xmlrpcresp(0, $xmlrpcerruser, $err);
		else return new xmlrpcresp(new xmlrpcval($record_id, 'int'));
	}
    
	function createproducts($m) {
	    global $username, $password, $database, $prefix;	
        
		// get the first param
		$sno = $m->getParam(0); // product code
		$sku = $sno->scalarval();
		$sno = $m->getParam(1); // product price (TODO trovare il modo per inserire)
		$price = $sno->scalarval();
		$sno = $m->getParam(2); // category_id
		$category_id = $sno->scalarval();
		$sno = $m->getParam(3); // line_id   (subcategory for VM)
		$line_id = $sno->scalarval();
		$sno = $m->getParam(4); // color_id
		$color_id = $sno->scalarval();
		$sno = $m->getParam(5); // tipology_id
		$tipology_id = $sno->scalarval();
		$sno = $m->getParam(6); // currency code (ex. 'EUR')
		$currency_type = $sno->scalarval();

		// Dimension:
		$sno = $m->getParam(7); // product_weight
		$product_weight = $sno->scalarval();
		$sno = $m->getParam(8); // product_length
		$product_length = $sno->scalarval();
		$sno = $m->getParam(9); // product_width
		$product_width = $sno->scalarval();
		$sno = $m->getParam(10); // product_height
		$product_height = $sno->scalarval(); 

        // TODO parametrize UOM:		
		$product_weight_uom = "KG";
		$product_lwh_uom = "CM";
		
		$err=""; # TODO manage errors
        mysql_connect(localhost, $username, $password);
        mysql_select_db($database) or die( "Unable to select database");

        // CREATE ROOT PRODUCT RECORD:
        $query = sprintf("SELECT * FROM  %svirtuemart_products WHERE product_sku='%s';", mysql_real_escape_string($prefix), mysql_real_escape_string($sku));         
        $record = mysql_query($query);        
        if (mysql_numrows($record)){
            $record_id = mysql_result($record, 0, "virtuemart_product_id");
            $query = sprintf("UPDATE %svirtuemart_products SET published='1', product_weight='%s', product_length='%s', product_width='%s', product_height='%s', product_weight_uom='%s', product_lwh_uom='%s' WHERE virtuemart_product_id='%s';",
                    mysql_real_escape_string($prefix), 
                    mysql_real_escape_string($product_weight),
                    mysql_real_escape_string($product_length),
                    mysql_real_escape_string($product_width),
                    mysql_real_escape_string($product_height),
                    mysql_real_escape_string($product_weight_uom),
                    mysql_real_escape_string($product_lwh_uom),
                    mysql_real_escape_string($record_id));
            mysql_query($query);
           }
        else { 
            $query = sprintf("INSERT INTO %svirtuemart_products(product_sku, published, product_weight, product_length, product_width, product_height, product_weight_uom, product_lwh_uom) VALUES ('%s', '1', '%s', '%s', '%s', '%s', '%s', '%s');",
                    mysql_real_escape_string($prefix), 
                    mysql_real_escape_string($sku),
                    mysql_real_escape_string($product_weight),
                    mysql_real_escape_string($product_length),
                    mysql_real_escape_string($product_width),
                    mysql_real_escape_string($product_height),
                    mysql_real_escape_string($product_weight_uom),
                    mysql_real_escape_string($product_lwh_uom));
            mysql_query($query);
            $record_id = mysql_insert_id();
        }    
        
        // CREATE PRICE:  TODO FINIRE DI TESTARE E VEDERE LA GESTIONE MIGLIORE override 
        // Currency type:
        $query = sprintf("SELECT * FROM %svirtuemart_currencies WHERE currency_code_3='%s';", mysql_real_escape_string($prefix), mysql_real_escape_string($currency_type)); 
        $record = mysql_query($query);        
        if (mysql_numrows($record)) $currency_type_id = mysql_result($record, 0, "virtuemart_currency_id");
        else $currency_type_id = 0; // Error no currency type!
        
        // Create or update:
        $query = sprintf("SELECT * FROM  %svirtuemart_product_prices WHERE virtuemart_product_id='%s';", mysql_real_escape_string($prefix), mysql_real_escape_string($record_id)); 
        $record = mysql_query($query);                
        if (mysql_numrows($record)){
            $query = sprintf("UPDATE %svirtuemart_product_prices SET product_price='%s', product_currency='%s' WHERE virtuemart_product_id='%s';", // TODO currency
                mysql_real_escape_string($prefix),
                mysql_real_escape_string($price),
                mysql_real_escape_string($currency_type_id),
                mysql_real_escape_string($record_id));
            mysql_query($query);
        }
        else {
            $query = sprintf("INSERT INTO %svirtuemart_product_prices(virtuemart_product_id, product_price, product_currency) VALUES ('%s', '%s', '%s');",
                mysql_real_escape_string($prefix),
                mysql_real_escape_string($record_id),
                mysql_real_escape_string($price),
                mysql_real_escape_string($currency_type_id));
            mysql_query($query);
        }

        // CATEGORY (TODO si può anche metterne una sola le linee non sono più sottocategorie):
        // delete category - also for lines  (TODO controllare se esiste per aggiornarla):
        $query = sprintf("DELETE FROM %svirtuemart_product_categories where virtuemart_product_id = '%s';", mysql_real_escape_string($prefix), mysql_real_escape_string($record_id));
        mysql_query($query);        
        if ($category_id > 0) {
            $query = sprintf("insert into %svirtuemart_product_categories(virtuemart_product_id, virtuemart_category_id) values ('%s', '%s');",
                mysql_real_escape_string($prefix),
                mysql_real_escape_string($record_id),
                mysql_real_escape_string($category_id));
            mysql_query($query);
        }
        // LINE (VM):
        // delete category  (TODO controllare se esiste per aggiornarla):
        //$query = sprintf("DELETE FROM %svirtuemart_product_categories where virtuemart_product_id = '%s';", mysql_real_escape_string($prefix), mysql_real_escape_string($record_id));
        //mysql_query($query);        
        if ($line_id > 0) {
            $query = sprintf("insert into %svirtuemart_product_categories(virtuemart_product_id, virtuemart_category_id) values ('%s', '%s');",
                mysql_real_escape_string($prefix),
                mysql_real_escape_string($record_id),
                mysql_real_escape_string($line_id));
            mysql_query($query);
        }
        // COLOR (VM):
        if ($color_id > 0) {
            $query = sprintf("insert into %svirtuemart_product_categories(virtuemart_product_id, virtuemart_category_id) values ('%s', '%s');",
                mysql_real_escape_string($prefix),
                mysql_real_escape_string($record_id),
                mysql_real_escape_string($color_id));
            mysql_query($query);
        }
        
        // TIPOLOGIE:        
        // delete tipology association:
        $query = sprintf("DELETE FROM %svirtuemart_product_manufacturers where virtuemart_product_id = '%s';", mysql_real_escape_string($prefix), mysql_real_escape_string($record_id));
        mysql_query($query);
        
        if ($tipology_id > 0) {
            $query = sprintf("INSERT INTO %svirtuemart_product_manufacturers(virtuemart_product_id, virtuemart_manufacturer_id) VALUES ('%s', '%s');",
                mysql_real_escape_string($prefix),
                mysql_real_escape_string($record_id),
                mysql_real_escape_string($tipology_id));
            mysql_query($query);
        }
        mysql_close();
        
		if ($err) return new xmlrpcresp(0, $xmlrpcerruser, $err);
		else return new xmlrpcresp(new xmlrpcval($record_id, 'int'));
	}
	$o=new xmlrpc_server_methods_container;
	
	$a=array(
	    // CAT FILTER: ***********************************************************
		"openerp.getCatFilter" => array(
			"function" => "getcatfilter",
			"signature" => array(array('string', 'string')), 
			"docstring" => 'From Name of cat filter module, return parameter string.'
		),		

		"openerp.setCatFilter" => array(
			"function" => "setcatfilter",
			"signature" => array(array('string', 'string', 'string')), 
			"docstring" => 'Set on Name cat filter module the new parameter value'
		),

	    // CATEGORY: ***********************************************************
		"openerp.getCategory" => array(
			"function" => "findcategory",
			"signature" => array(array('string', 'int')), 
			"docstring" => 'Search ID passed in category.'
		),		

		"openerp.createCategory" => array(
			"function" => "createcategory",
			"signature" => array(array('string', 'string', 'string', 'int', 'int', 'string')), 
			"docstring" => 'Create a category, if has a father pass the extra ID of the father. (name, eng_name, parent, order, image_file)'
		),		
		
		"openerp.unlinkallCategory" => array(
			"function" => "unlinkallcategory",
			"signature" => array(array('string', 'boolean')), 
			"docstring" => 'Delete all category (pass K2 parameter)'
		),		

	    // MANUFACTURER: *******************************************************
		"openerp.getManufacturer" => array(
			"function" => "findmanufacturer",
			"signature" => array(array('string', 'int')), 
			"docstring" => 'Search ID passed in category.'
		),		

		"openerp.createManufacturer" => array(
			"function" => "createmanufacturer",
			"signature" => array(array('string', 'string', 'string')), 
			"docstring" => 'Create a manufacturer.'
		),		
		
		"openerp.unlinkallManufacturer" => array(
			"function" => "unlinkallmanufacturer",
			"signature" => array(array('string')), 
			"docstring" => 'Delete all manufacturer'
		),		

	    // PRODUCTS: ***********************************************************
	    // TODO Fare un ciclo di manutenzione: 
	    // Leggo tutti i prodotti e mi assicuro di pulire tutte le tabelle che 
	    // li usano dai prodotti extra rimasti

		"openerp.createProducts" => array(  // Only for VM
			"function" => "createproducts",
			"signature" => array(array('int', 'string', 'string', 'int', 'int', 'int', 'int', 'string', 'double', 'double', 'double', 'double')), 
			"docstring" => 'Create a product. return ID, (code, price, category, line (subcategory), color (sub-sub-category), typology, Type currency ex. EUR, product_weight, product_length, product_width, product_height)'
		),		

		"openerp.createK2Products" => array(  // only for K2
			"function" => "createk2products",
            //                                 code      name      params    gallery  extra     search    caption   intro    full      order  catid                
			"signature" => array(array('int', 'string', 'string', 'string', 'string', 'string', 'string', 'string', 'string','string', 'int', 'int')), 
			"docstring" => 'Create a product for K2 elements'
		),		

		"openerp.createProductsLanguage" => array(
			"function" => "createproductslanguage",
			"signature" => array(array('string', 'string', 'int', 'string', 'string', 'string')), 
			"docstring" => 'Create a product language (code "it_it", product_id, name, short, description) return OK or error.'
		),		
		"openerp.getAllProducts" => array( // K2 e VM
			"function" => "getallproducts",
			"signature" => array(array('struct', 'boolean')), 
			"docstring" => 'Get product structure, test if is K2 (passed value): key=sku: value=id'
		),		
		"openerp.deleteAllProducts" => array( // K2 e VM
			"function" => "unlinkallproducts",
			"signature" => array(array('string', 'boolean', 'array')), 
			"docstring" => 'Delete list of ID passed as a list (and all extra information linked to this IDs), first boolean = is_k2 DB'
		),		
		"openerp.createProductModCustom" => array( // K2 
			"function" => "createproductmodcustom",
			"signature" => array(array('int', 'int', 'string', 'string', 'string')), 
			"docstring" => 'Create if ID is empty the mod_custom for article (ID, title, text, has title)'
		),		
		"openerp.createProductGallery" => array( // K2 
			"function" => "createproductgallery",
			"signature" => array(array('int', 'string', 'string')), 
			"docstring" => 'Create if not present the gallery in params, return ID (folder, title)'
		),		

	    // MEDIA: ***********************************************************	    
		"openerp.createMedia" => array(
			"function" => "createmedia",
			"signature" => array(array('int', 'string')), 
			"docstring" => 'Create a product. (name, image, title, path, path_resize, alt)'
		),		

		"openerp.unlinkProductMedia" => array(
			"function" => "unlinkproductmedia",
			"signature" => array(array('string', 'string')), 
			"docstring" => 'Delete media for product (product_id)'
		),		
		"openerp.createProductMedia" => array(
			"function" => "createproductmedia",
			"signature" => array(array('string', 'int', 'int', 'int')), 
			"docstring" => 'Create a product. (product_id, media_id, sequence)'
		),		
		
	    // CUSTOM FILTERS: *****************************************************
		"openerp.createCustoms" => array(
			"function" => "createcustoms",
			"signature" => array(array('string', 'string', 'int', 'int')), 
			"docstring" => 'Create a custom fields. (name, order, field_type)'
		),		
		"openerp.unlinkCustomFilter" => array(
			"function" => "unlinkcustomfilter",
			"signature" => array(array('string', 'string')), 
			"docstring" => 'Delete custom filter for product (product_id).'
		),		
		"openerp.createCustomFilter" => array(
			"function" => "createcustomfilter",
			"signature" => array(array('string', 'string', 'string', 'string')), 
			"docstring" => 'Create a custom filter for product (name, product_id, custom_field_id).'
		),		
		"openerp.createCustomRelatedFilter" => array(
			"function" => "createcustomrelatedfilter",
			"signature" => array(array('string', 'int', 'int', 'int')), 
			"docstring" => 'Create a custom filter for product (parent product_id, child product_id, order).'
		),				
		
		// K2 PROCEDURES: ******************************************************
		// temporary for startup
		"openerp.updateProductAlias" => array(
			"function" => "updateproductalias",
			"signature" => array(array('string', 'string', 'string')), 
			"docstring" => 'Parameters: From K2 alias code, to alias OpenERP code.'
		),		
		"openerp.unlinkTrashPublish" => array(
			"function" => "unlinktrashpublish",
			"signature" => array(array('string')), 
			"docstring" => 'Delete record trashed or not published.'
		),		

		"openerp.createK2Tag" => array( // before deleted!
			"function" => "createk2tag",
			"signature" => array(array('string', 'int', 'int')), 
			"docstring" => 'Create tag link (tag_category_id, product_id)'
		),		

		"openerp.getSecureHRMD5" => array(
			"function" => "getsecurehrMD5",
			"signature" => array(array('string', 'string')), 
			"docstring" => 'return MD5 for product code passed'
		),		

		"openerp.getImageMD5" => array(
			"function" => "getimageMD5",
			"signature" => array(array('string', 'string')), 
			"docstring" => 'return MD5 for product code passed'
		),		

		"openerp.createVetrina" => array( // update values!
			"function" => "createvetrina",
			"signature" => array(array('string', 'int', 'int', 'string')), 
			"docstring" => 'Create tag link (vetrina_id, product_id, badge)'
		),		
		
		"openerp.deleteK2MenuitemModule" => array( 
			"function" => "deletek2menuitemmodule",
			"signature" => array(array('string', 'string')), 
			"docstring" => 'Create link menuitem - module (product code=alias)'
		),				
		"openerp.createK2MenuitemModule" => array( // to delete before
			"function" => "createk2menuitemmodule",
			"signature" => array(array('string', 'string', 'int')), 
			"docstring" => 'Create link menuitem - module (product code=alias, module_id)'
		),				
		"openerp.createK2MenuitemGallery" => array( // to delete before
			"function" => "createk2menuitemgallery",
			"signature" => array(array('string', 'string', 'int')), 
			"docstring" => 'Create link menuitem - module (product code=alias, gallery_id=moudule_id)'
		),				
		
	);

	$s=new xmlrpc_server($a, false);
	$s->setdebug(3);
	$s->compress_response = true;

	// out-of-band information: let the client manipulate the server operations.
	// we do this to help the testsuite script: do not reproduce in production!
	if (isset($_GET['RESPONSE_ENCODING']))
		$s->response_charset_encoding = $_GET['RESPONSE_ENCODING'];

	$s->service();
?>
